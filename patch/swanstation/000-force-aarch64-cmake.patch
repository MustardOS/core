diff --git a/CMakeLists.txt b/CMakeLists.txt
index 945615ac..37666cb0 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -95,36 +95,36 @@ if(CMAKE_COMPILER_IS_GNUCC OR CMAKE_CXX_COMPILER_ID MATCHES "Clang")
 endif()
 
 # Detect processor type.
-if(APPLE AND "${CMAKE_OSX_ARCHITECTURES}" MATCHES "arm64")
+#if(APPLE AND "${CMAKE_OSX_ARCHITECTURES}" MATCHES "arm64")
+#  set(CPU_ARCH "aarch64")
+#elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "amd64" OR
+#   ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "AMD64")
+#  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
+#    set(CPU_ARCH "x64")
+#  else()
+#    # Cross-compiling 32-bit build. 32-bit hosts are not supported.
+#    set(CPU_ARCH "x86")
+#  endif()
+#elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i386" OR
+#       ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
+#  set(CPU_ARCH "x86")
+#elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm64")
   set(CPU_ARCH "aarch64")
-elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86_64" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "amd64" OR
-   ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "AMD64")
-  if(CMAKE_SIZEOF_VOID_P EQUAL 8)
-    set(CPU_ARCH "x64")
-  else()
-    # Cross-compiling 32-bit build. 32-bit hosts are not supported.
-    set(CPU_ARCH "x86")
-  endif()
-elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "x86" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i386" OR
-       ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "i686")
-  set(CPU_ARCH "x86")
-elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "aarch64" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm64")
-  set(CPU_ARCH "aarch64")
-elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "armv7-a" OR
-       ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "armv7l")
-  set(CPU_ARCH "aarch32")
-  if(ANDROID)
-    # Force ARM mode, since apparently ANDROID_ARM_MODE isn't working..
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -marm")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -marm")
-  else()
-    # Enable NEON.
-    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -marm -march=armv7-a")
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -marm -march=armv7-a")
-  endif()
-else()
-  message(FATAL_ERROR "Unknown system processor: " ${CMAKE_SYSTEM_PROCESSOR})
-endif()
+#elseif(${CMAKE_SYSTEM_PROCESSOR} STREQUAL "arm" OR ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "armv7-a" OR
+#       ${CMAKE_SYSTEM_PROCESSOR} STREQUAL "armv7l")
+#  set(CPU_ARCH "aarch32")
+#  if(ANDROID)
+#    # Force ARM mode, since apparently ANDROID_ARM_MODE isn't working..
+#    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -marm")
+#    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -marm")
+#  else()
+#    # Enable NEON.
+#    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -marm -march=armv7-a")
+#    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -marm -march=armv7-a")
+#  endif()
+#else()
+#  message(FATAL_ERROR "Unknown system processor: " ${CMAKE_SYSTEM_PROCESSOR})
+#endif()
 
 # Write binaries to a seperate directory.
 set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_CURRENT_BINARY_DIR}/bin")

